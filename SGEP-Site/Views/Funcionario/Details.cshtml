@model FuncionarioDetailsViewModel;

@{
    ViewData["Title"] = "Detalhes";
}
@*Não sei se aqui é o melhor lugar pra identificar que o funcionário está demitido
    (Pra testarem invertam a condição abaixo, pq ainda n dá pra demitir).
    Só coloquei porque não achei melhor lugar pra colocar, e também porque eu queria muito
    usar as badges*@
<h1 class="mt-2 mb-5 text-center">Funcionário</h1>
<div class="shadow-regular mt-5">
    <table class="table table-bordered shadow-regular">
        <tr>
            <td class="table-dark alert-link" style="width:250px">@Html.DisplayNameFor(model => model.Id)</td>
            <td>FUN-@Html.DisplayFor(model => model.Id)</td>
        </tr>
        <tr>
            <td class="table-dark alert-link" style="width:250px">@Html.DisplayNameFor(model => model.Nome)</td>
            <td>@Html.DisplayFor(model => model.Nome)</td>
        </tr>
        <tr>
            <td class="table-dark alert-link" style="width:250px">@Html.DisplayNameFor(model => model.Cargo)</td>
            <td>@Html.DisplayFor(model => model.Cargo)</td>
        </tr>
    </table>
</div>
<div>
    <a asp-action="Edit" id="linkEdit" asp-route-id="@Model.Id"><input type="button" id="editButton" class="btn btn-secondary squareborder" value="Editar funcionário" /></a>
    <a asp-action="Index" id="linkIndex"><input type="button" id="indexButton" class="btn btn-danger squareborder" value="Voltar" /></a>
</div>
@if (String.IsNullOrEmpty (Model.Demitido)) 
{ 
    <hr />
    <h2>Projetos associados</h2>
    <br />
        @await Html.PartialAsync(CaminhoPartialView.LISTA_PROJETOS, Model.Projetos, ViewData); 
    <a id="linkIndex"><input type="button" id="indexButton" class="btn btn-primary squareborder mt-4" value="Verificar projeto" /></a>
}
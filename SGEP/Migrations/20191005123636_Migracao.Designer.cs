// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGEP.Banco;

namespace SGEP.Migrations
{
    [DbContext(typeof(ContextoBD))]
    [Migration("20191005123636_Migracao")]
    partial class Migracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SGEP.Models.Funcionario", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("SGEP.Models.Material", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(27, 2)");

                    b.Property<decimal>("Quantidade");

                    b.Property<string>("Unidade");

                    b.HasKey("Id");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("SGEP.Models.MovimentacaoAlocacao", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<ulong?>("MaterialMovimentadoId");

                    b.Property<ulong?>("ProjSolicitanteId");

                    b.Property<decimal>("Quantidade");

                    b.Property<ulong?>("SolicitanteId");

                    b.Property<string>("TipoMovimentacao");

                    b.HasKey("Id");

                    b.HasIndex("MaterialMovimentadoId");

                    b.HasIndex("ProjSolicitanteId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("MovimentacaoAlocacoes");
                });

            modelBuilder.Entity("SGEP.Models.MovimentacaoCompra", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<ulong?>("MaterialMovimentadoId");

                    b.Property<decimal>("Quantidade");

                    b.Property<string>("TipoMovimentacao");

                    b.HasKey("Id");

                    b.HasIndex("MaterialMovimentadoId");

                    b.ToTable("MovimentacaoCompras");
                });

            modelBuilder.Entity("SGEP.Models.ParticipaProjeto", b =>
                {
                    b.Property<ulong>("CodFuncionario");

                    b.Property<ulong>("CodProjeto");

                    b.HasKey("CodFuncionario", "CodProjeto");

                    b.HasIndex("CodProjeto");

                    b.ToTable("ParticipaProjeto");
                });

            modelBuilder.Entity("SGEP.Models.Projeto", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<string>("Estado")
                        .IsRequired();

                    b.Property<string>("Nome");

                    b.Property<DateTime>("PrazoEstimado");

                    b.HasKey("Id");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("SGEP.Models.Transacao", b =>
                {
                    b.Property<ulong>("CodMaterial");

                    b.Property<ulong>("CodProjeto");

                    b.Property<DateTime>("Data");

                    b.Property<ulong>("Quantidade");

                    b.HasKey("CodMaterial", "CodProjeto");

                    b.HasIndex("CodProjeto");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("SGEP.Models.Unidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<string>("Unidade");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("SGEP.Models.MovimentacaoAlocacao", b =>
                {
                    b.HasOne("SGEP.Models.Material", "MaterialMovimentado")
                        .WithMany()
                        .HasForeignKey("MaterialMovimentadoId");

                    b.HasOne("SGEP.Models.Projeto", "ProjSolicitante")
                        .WithMany()
                        .HasForeignKey("ProjSolicitanteId");

                    b.HasOne("SGEP.Models.Funcionario", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId");
                });

            modelBuilder.Entity("SGEP.Models.MovimentacaoCompra", b =>
                {
                    b.HasOne("SGEP.Models.Material", "MaterialMovimentado")
                        .WithMany()
                        .HasForeignKey("MaterialMovimentadoId");
                });

            modelBuilder.Entity("SGEP.Models.ParticipaProjeto", b =>
                {
                    b.HasOne("SGEP.Models.Funcionario", "Funcionario")
                        .WithMany("Participacoes")
                        .HasForeignKey("CodFuncionario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGEP.Models.Projeto", "Projeto")
                        .WithMany("Participacoes")
                        .HasForeignKey("CodProjeto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGEP.Models.Transacao", b =>
                {
                    b.HasOne("SGEP.Models.Material", "Material")
                        .WithMany("Alocacoes")
                        .HasForeignKey("CodMaterial")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGEP.Models.Projeto", "Projeto")
                        .WithMany("Alocacoes")
                        .HasForeignKey("CodProjeto")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
